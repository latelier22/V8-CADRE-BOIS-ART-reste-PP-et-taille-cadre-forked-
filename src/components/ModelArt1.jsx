/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useFrame, useThree } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

function ModelArt(props) {
  const group = useRef()

  const { gl } = useThree()
  const { nodes, materials } = useGLTF('/ModelArt.gltf')

  let canvas = Array.from(document.getElementsByTagName('canvas'))[1],
    ctx,
    texture
  ctx = canvas.getContext('2d')
  texture = new THREE.CanvasTexture(ctx.canvas)
  texture.flipY = false // Vous pouvez essayer true si n√©cessaire.

  texture.anisotropy = gl.capabilities.getMaxAnisotropy()
  texture.needsUpdate = true
  /* ANIMATION */
  return (
    <group {...props} rotation={[0, Math.PI, 0]} position={[0, -2, 0]} ref={group} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Art.geometry} material={materials.Material}>
        <meshStandardMaterial attach="material" map={texture}>
          <canvasTexture attach="map" image={canvas} />
        </meshStandardMaterial>
      </mesh>
    </group>
  )
}

useGLTF.preload('/ModelArt.gltf')

export default ModelArt
